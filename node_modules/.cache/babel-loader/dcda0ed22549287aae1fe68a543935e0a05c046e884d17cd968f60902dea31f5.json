{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prath\\\\Desktop\\\\infoviz\\\\project\\\\src\\\\visualizations\\\\UrbanSymphony.js\",\n  _s = $RefreshSig$();\n// src/visualizations/UrbanSymphony.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { Reverb, FeedbackDelay, Filter, PolySynth, Synth, FMSynth, NoiseSynth } from 'tone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrbanSymphony = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\n  const [selectedBorough, setSelectedBorough] = useState('all');\n  const [period, setPeriod] = useState('current');\n  const waveformRef = useRef(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // References for Tone.js instruments and effects\n  const synths = useRef({\n    taxi: null,\n    subway: null,\n    calls311: null\n  });\n  const effects = useRef({\n    reverb: null,\n    delay: null,\n    filter: null\n  });\n\n  // Transport control reference\n  const transportInterval = useRef(null);\n  const currentStep = useRef(0);\n\n  // Boroughs for filtering\n  const boroughs = ['Manhattan', 'Brooklyn', 'Queens', 'Bronx', 'Staten Island'];\n\n  // Fetch sonification data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`/api/sonification-data?period=${period}&borough=${selectedBorough}`);\n        const responseData = await response.json();\n        setData(responseData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching sonification data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [period, selectedBorough]);\n\n  // Initialize Tone.js instruments and effects\n  useEffect(() => {\n    // Initialize effects first\n    effects.current.reverb = new Tone.Reverb({\n      decay: 2,\n      wet: 0.3\n    }).toDestination();\n    effects.current.delay = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      feedback: 0.1,\n      wet: 0.2\n    }).connect(effects.current.reverb);\n    effects.current.filter = new Tone.Filter({\n      frequency: 1000,\n      type: 'lowpass',\n      Q: 1\n    }).connect(effects.current.delay);\n\n    // Initialize synths\n    synths.current.taxi = new Tone.PolySynth(Tone.Synth, {\n      oscillator: {\n        type: 'triangle'\n      },\n      envelope: {\n        attack: 0.02,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1\n      },\n      volume: -10\n    }).connect(effects.current.filter);\n    synths.current.subway = new Tone.PolySynth(Tone.FMSynth, {\n      harmonicity: 3,\n      modulationIndex: 10,\n      oscillator: {\n        type: 'sine'\n      },\n      envelope: {\n        attack: 0.01,\n        decay: 0.2,\n        sustain: 0.2,\n        release: 1.2\n      },\n      modulation: {\n        type: 'square'\n      },\n      modulationEnvelope: {\n        attack: 0.5,\n        decay: 0.1,\n        sustain: 0.2,\n        release: 0.5\n      },\n      volume: -15\n    }).connect(effects.current.filter);\n    synths.current.calls311 = new Tone.NoiseSynth({\n      noise: {\n        type: 'white'\n      },\n      envelope: {\n        attack: 0.005,\n        decay: 0.1,\n        sustain: 0.05,\n        release: 0.3\n      },\n      volume: -25\n    }).connect(effects.current.filter);\n\n    // Set initial volume\n    Tone.Destination.volume.value = Tone.gainToDb(volume);\n\n    // Clean up function\n    return () => {\n      // Dispose synths\n      Object.values(synths.current).forEach(synth => {\n        if (synth) synth.dispose();\n      });\n\n      // Dispose effects\n      Object.values(effects.current).forEach(effect => {\n        if (effect) effect.dispose();\n      });\n\n      // Stop any ongoing playback\n      stopPlayback();\n    };\n  }, []);\n\n  // Update volume when it changes\n  useEffect(() => {\n    Tone.Destination.volume.value = Tone.gainToDb(volume);\n  }, [volume]);\n\n  // Start or stop playback based on isPlaying state\n  useEffect(() => {\n    if (isPlaying) {\n      startPlayback();\n    } else {\n      stopPlayback();\n    }\n    return () => stopPlayback();\n  }, [isPlaying, data, playbackSpeed]);\n\n  // Function to start playback\n  const startPlayback = async () => {\n    if (!data || !data.steps || data.steps.length === 0) return;\n\n    // Ensure audio context is resumed\n    await Tone.start();\n\n    // Reset current step\n    currentStep.current = 0;\n\n    // Clear previous interval if any\n    if (transportInterval.current) {\n      clearInterval(transportInterval.current);\n    }\n\n    // Start new interval for playback\n    const intervalTime = 250 / playbackSpeed; // 250ms per step, adjusted by speed\n    transportInterval.current = setInterval(() => playStep(), intervalTime);\n  };\n\n  // Function to stop playback\n  const stopPlayback = () => {\n    if (transportInterval.current) {\n      clearInterval(transportInterval.current);\n      transportInterval.current = null;\n    }\n\n    // Stop all active notes\n    Object.values(synths.current).forEach(synth => {\n      if (synth) synth.releaseAll();\n    });\n  };\n\n  // Function to play a single step of the data\n  const playStep = () => {\n    if (!data || !data.steps || currentStep.current >= data.steps.length) {\n      // Loop back to the beginning\n      currentStep.current = 0;\n    }\n    const step = data.steps[currentStep.current];\n\n    // Play taxi melody notes\n    if (step.taxi && step.taxi.notes && step.taxi.notes.length > 0) {\n      synths.current.taxi.triggerAttackRelease(step.taxi.notes, step.taxi.duration || '8n', Tone.now(), step.taxi.velocity || 0.7);\n    }\n\n    // Play subway bass notes\n    if (step.subway && step.subway.notes && step.subway.notes.length > 0) {\n      synths.current.subway.triggerAttackRelease(step.subway.notes, step.subway.duration || '4n', Tone.now(), step.subway.velocity || 0.8);\n    }\n\n    // Play 311 calls percussion\n    if (step.calls311 && step.calls311.trigger) {\n      synths.current.calls311.triggerAttackRelease(step.calls311.duration || '16n');\n    }\n\n    // Update waveform visualization\n    updateWaveform(step);\n\n    // Advance to next step\n    currentStep.current += 1;\n  };\n\n  // Function to update waveform visualization\n  const updateWaveform = step => {\n    if (!waveformRef.current) return;\n    const svg = d3.select(waveformRef.current);\n    const width = waveformRef.current.clientWidth;\n    const height = waveformRef.current.clientHeight;\n\n    // Clear previous waveform\n    svg.selectAll('*').remove();\n\n    // Draw taxi waveform\n    if (step.taxi && step.taxi.waveform) {\n      drawWaveform(svg, step.taxi.waveform, width, height * 0.3, 0, '#ff7700');\n    }\n\n    // Draw subway waveform\n    if (step.subway && step.subway.waveform) {\n      drawWaveform(svg, step.subway.waveform, width, height * 0.3, height * 0.35, '#0077ff');\n    }\n\n    // Draw 311 calls waveform\n    if (step.calls311 && step.calls311.waveform) {\n      drawWaveform(svg, step.calls311.waveform, width, height * 0.3, height * 0.7, '#00ff77');\n    }\n  };\n\n  // Helper function to draw a waveform\n  const drawWaveform = (svg, waveform, width, height, yOffset, color) => {\n    const points = waveform.map((value, i) => [i / (waveform.length - 1) * width, (0.5 - value / 2) * height + yOffset]);\n    const line = d3.line();\n    svg.append('path').datum(points).attr('d', line).attr('fill', 'none').attr('stroke', color).attr('stroke-width', 2);\n  };\n\n  // Toggle play/pause\n  const togglePlayback = async () => {\n    if (!isPlaying) {\n      // Initialize audio context if needed\n      await Tone.start();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"urban-symphony-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Time Period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: period === 'pre-covid' ? 'active' : '',\n            onClick: () => setPeriod('pre-covid'),\n            disabled: isPlaying,\n            children: \"Pre-COVID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: period === 'covid' ? 'active' : '',\n            onClick: () => setPeriod('covid'),\n            disabled: isPlaying,\n            children: \"During COVID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: period === 'recovery' ? 'active' : '',\n            onClick: () => setPeriod('recovery'),\n            disabled: isPlaying,\n            children: \"Recovery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: period === 'current' ? 'active' : '',\n            onClick: () => setPeriod('current'),\n            disabled: isPlaying,\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Borough\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBorough === 'all' ? 'active' : '',\n            onClick: () => setSelectedBorough('all'),\n            disabled: isPlaying,\n            children: \"All Boroughs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), boroughs.map(borough => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBorough === borough ? 'active' : '',\n            onClick: () => setSelectedBorough(borough),\n            disabled: isPlaying,\n            children: borough\n          }, borough, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `play-button ${isPlaying ? 'playing' : ''}`,\n        onClick: togglePlayback,\n        disabled: loading || !data,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.25\",\n          max: \"2\",\n          step: \"0.25\",\n          value: playbackSpeed,\n          onChange: e => setPlaybackSpeed(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading sonification data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: waveformRef,\n        width: \"100%\",\n        height: \"200\",\n        style: {\n          border: '1px solid #ddd',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveform-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-box\",\n            style: {\n              backgroundColor: '#ff7700'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Taxi Trips (Melody)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-box\",\n            style: {\n              backgroundColor: '#0077ff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Subway Ridership (Bass)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-box\",\n            style: {\n              backgroundColor: '#00ff77'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"311 Calls (Percussion)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Experiencing the Urban Symphony\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This sonification transforms NYC urban data into musical elements:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Taxi patterns control the melody (higher notes for more activity)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Subway ridership determines the bass line (deeper tones, longer durations)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"311 service calls create percussive elements (more calls = more frequent beats)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listen for the stark contrast between pre-COVID, COVID, and recovery periods. The rhythm and density of sounds represent the pulse of urban activity, allowing you to \\\"hear\\\" patterns that might be missed in visual representations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(UrbanSymphony, \"4uHNhf+fUpeWPwXIjBeqh3PvzMg=\");\n_c = UrbanSymphony;\nexport default UrbanSymphony;\nvar _c;\n$RefreshReg$(_c, \"UrbanSymphony\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","Reverb","FeedbackDelay","Filter","PolySynth","Synth","FMSynth","NoiseSynth","jsxDEV","_jsxDEV","UrbanSymphony","_s","isPlaying","setIsPlaying","volume","setVolume","playbackSpeed","setPlaybackSpeed","selectedBorough","setSelectedBorough","period","setPeriod","waveformRef","data","setData","loading","setLoading","synths","taxi","subway","calls311","effects","reverb","delay","filter","transportInterval","currentStep","boroughs","fetchData","response","fetch","responseData","json","error","console","current","Tone","decay","wet","toDestination","delayTime","feedback","connect","frequency","type","Q","oscillator","envelope","attack","sustain","release","harmonicity","modulationIndex","modulation","modulationEnvelope","noise","Destination","value","gainToDb","Object","values","forEach","synth","dispose","effect","stopPlayback","startPlayback","steps","length","start","clearInterval","intervalTime","setInterval","playStep","releaseAll","step","notes","triggerAttackRelease","duration","now","velocity","trigger","updateWaveform","svg","select","width","clientWidth","height","clientHeight","selectAll","remove","waveform","drawWaveform","yOffset","color","points","map","i","line","append","datum","attr","togglePlayback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","borough","min","max","onChange","e","parseFloat","target","ref","style","border","borderRadius","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/prath/Desktop/infoviz/project/src/visualizations/UrbanSymphony.js"],"sourcesContent":["// src/visualizations/UrbanSymphony.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Reverb, FeedbackDelay, Filter, PolySynth, Synth, FMSynth, NoiseSynth } from 'tone';\r\n\r\nconst UrbanSymphony = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\r\n  const [selectedBorough, setSelectedBorough] = useState('all');\r\n  const [period, setPeriod] = useState('current');\r\n  const waveformRef = useRef(null);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // References for Tone.js instruments and effects\r\n  const synths = useRef({\r\n    taxi: null,\r\n    subway: null,\r\n    calls311: null,\r\n  });\r\n  \r\n  const effects = useRef({\r\n    reverb: null,\r\n    delay: null,\r\n    filter: null,\r\n  });\r\n  \r\n  // Transport control reference\r\n  const transportInterval = useRef(null);\r\n  const currentStep = useRef(0);\r\n  \r\n  // Boroughs for filtering\r\n  const boroughs = ['Manhattan', 'Brooklyn', 'Queens', 'Bronx', 'Staten Island'];\r\n  \r\n  // Fetch sonification data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`/api/sonification-data?period=${period}&borough=${selectedBorough}`);\r\n        const responseData = await response.json();\r\n        setData(responseData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching sonification data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [period, selectedBorough]);\r\n  \r\n  // Initialize Tone.js instruments and effects\r\n  useEffect(() => {\r\n    // Initialize effects first\r\n    effects.current.reverb = new Tone.Reverb({\r\n      decay: 2,\r\n      wet: 0.3\r\n    }).toDestination();\r\n    \r\n    effects.current.delay = new Tone.FeedbackDelay({\r\n      delayTime: 0.25,\r\n      feedback: 0.1,\r\n      wet: 0.2\r\n    }).connect(effects.current.reverb);\r\n    \r\n    effects.current.filter = new Tone.Filter({\r\n      frequency: 1000,\r\n      type: 'lowpass',\r\n      Q: 1\r\n    }).connect(effects.current.delay);\r\n    \r\n    // Initialize synths\r\n    synths.current.taxi = new Tone.PolySynth(Tone.Synth, {\r\n      oscillator: {\r\n        type: 'triangle'\r\n      },\r\n      envelope: {\r\n        attack: 0.02,\r\n        decay: 0.1,\r\n        sustain: 0.3,\r\n        release: 1\r\n      },\r\n      volume: -10\r\n    }).connect(effects.current.filter);\r\n    \r\n    synths.current.subway = new Tone.PolySynth(Tone.FMSynth, {\r\n      harmonicity: 3,\r\n      modulationIndex: 10,\r\n      oscillator: {\r\n        type: 'sine'\r\n      },\r\n      envelope: {\r\n        attack: 0.01,\r\n        decay: 0.2,\r\n        sustain: 0.2,\r\n        release: 1.2\r\n      },\r\n      modulation: {\r\n        type: 'square'\r\n      },\r\n      modulationEnvelope: {\r\n        attack: 0.5,\r\n        decay: 0.1,\r\n        sustain: 0.2,\r\n        release: 0.5\r\n      },\r\n      volume: -15\r\n    }).connect(effects.current.filter);\r\n    \r\n    synths.current.calls311 = new Tone.NoiseSynth({\r\n      noise: {\r\n        type: 'white'\r\n      },\r\n      envelope: {\r\n        attack: 0.005,\r\n        decay: 0.1,\r\n        sustain: 0.05,\r\n        release: 0.3\r\n      },\r\n      volume: -25\r\n    }).connect(effects.current.filter);\r\n    \r\n    // Set initial volume\r\n    Tone.Destination.volume.value = Tone.gainToDb(volume);\r\n    \r\n    // Clean up function\r\n    return () => {\r\n      // Dispose synths\r\n      Object.values(synths.current).forEach(synth => {\r\n        if (synth) synth.dispose();\r\n      });\r\n      \r\n      // Dispose effects\r\n      Object.values(effects.current).forEach(effect => {\r\n        if (effect) effect.dispose();\r\n      });\r\n      \r\n      // Stop any ongoing playback\r\n      stopPlayback();\r\n    };\r\n  }, []);\r\n  \r\n  // Update volume when it changes\r\n  useEffect(() => {\r\n    Tone.Destination.volume.value = Tone.gainToDb(volume);\r\n  }, [volume]);\r\n  \r\n  // Start or stop playback based on isPlaying state\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      startPlayback();\r\n    } else {\r\n      stopPlayback();\r\n    }\r\n    \r\n    return () => stopPlayback();\r\n  }, [isPlaying, data, playbackSpeed]);\r\n  \r\n  // Function to start playback\r\n  const startPlayback = async () => {\r\n    if (!data || !data.steps || data.steps.length === 0) return;\r\n    \r\n    // Ensure audio context is resumed\r\n    await Tone.start();\r\n    \r\n    // Reset current step\r\n    currentStep.current = 0;\r\n    \r\n    // Clear previous interval if any\r\n    if (transportInterval.current) {\r\n      clearInterval(transportInterval.current);\r\n    }\r\n    \r\n    // Start new interval for playback\r\n    const intervalTime = 250 / playbackSpeed; // 250ms per step, adjusted by speed\r\n    transportInterval.current = setInterval(() => playStep(), intervalTime);\r\n  };\r\n  \r\n  // Function to stop playback\r\n  const stopPlayback = () => {\r\n    if (transportInterval.current) {\r\n      clearInterval(transportInterval.current);\r\n      transportInterval.current = null;\r\n    }\r\n    \r\n    // Stop all active notes\r\n    Object.values(synths.current).forEach(synth => {\r\n      if (synth) synth.releaseAll();\r\n    });\r\n  };\r\n  \r\n  // Function to play a single step of the data\r\n  const playStep = () => {\r\n    if (!data || !data.steps || currentStep.current >= data.steps.length) {\r\n      // Loop back to the beginning\r\n      currentStep.current = 0;\r\n    }\r\n    \r\n    const step = data.steps[currentStep.current];\r\n    \r\n    // Play taxi melody notes\r\n    if (step.taxi && step.taxi.notes && step.taxi.notes.length > 0) {\r\n      synths.current.taxi.triggerAttackRelease(\r\n        step.taxi.notes,\r\n        step.taxi.duration || '8n',\r\n        Tone.now(),\r\n        step.taxi.velocity || 0.7\r\n      );\r\n    }\r\n    \r\n    // Play subway bass notes\r\n    if (step.subway && step.subway.notes && step.subway.notes.length > 0) {\r\n      synths.current.subway.triggerAttackRelease(\r\n        step.subway.notes,\r\n        step.subway.duration || '4n',\r\n        Tone.now(),\r\n        step.subway.velocity || 0.8\r\n      );\r\n    }\r\n    \r\n    // Play 311 calls percussion\r\n    if (step.calls311 && step.calls311.trigger) {\r\n      synths.current.calls311.triggerAttackRelease(\r\n        step.calls311.duration || '16n'\r\n      );\r\n    }\r\n    \r\n    // Update waveform visualization\r\n    updateWaveform(step);\r\n    \r\n    // Advance to next step\r\n    currentStep.current += 1;\r\n  };\r\n  \r\n  // Function to update waveform visualization\r\n  const updateWaveform = (step) => {\r\n    if (!waveformRef.current) return;\r\n    \r\n    const svg = d3.select(waveformRef.current);\r\n    const width = waveformRef.current.clientWidth;\r\n    const height = waveformRef.current.clientHeight;\r\n    \r\n    // Clear previous waveform\r\n    svg.selectAll('*').remove();\r\n    \r\n    // Draw taxi waveform\r\n    if (step.taxi && step.taxi.waveform) {\r\n      drawWaveform(svg, step.taxi.waveform, width, height * 0.3, 0, '#ff7700');\r\n    }\r\n    \r\n    // Draw subway waveform\r\n    if (step.subway && step.subway.waveform) {\r\n      drawWaveform(svg, step.subway.waveform, width, height * 0.3, height * 0.35, '#0077ff');\r\n    }\r\n    \r\n    // Draw 311 calls waveform\r\n    if (step.calls311 && step.calls311.waveform) {\r\n      drawWaveform(svg, step.calls311.waveform, width, height * 0.3, height * 0.7, '#00ff77');\r\n    }\r\n  };\r\n  \r\n  // Helper function to draw a waveform\r\n  const drawWaveform = (svg, waveform, width, height, yOffset, color) => {\r\n    const points = waveform.map((value, i) => [\r\n      (i / (waveform.length - 1)) * width,\r\n      (0.5 - value / 2) * height + yOffset\r\n    ]);\r\n    \r\n    const line = d3.line();\r\n    \r\n    svg.append('path')\r\n      .datum(points)\r\n      .attr('d', line)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', color)\r\n      .attr('stroke-width', 2);\r\n  };\r\n  \r\n  // Toggle play/pause\r\n  const togglePlayback = async () => {\r\n    if (!isPlaying) {\r\n      // Initialize audio context if needed\r\n      await Tone.start();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"urban-symphony-container\">\r\n      <div className=\"controls\">\r\n        <div className=\"control-section\">\r\n          <h3>Time Period</h3>\r\n          <div className=\"button-group\">\r\n            <button \r\n              className={period === 'pre-covid' ? 'active' : ''} \r\n              onClick={() => setPeriod('pre-covid')}\r\n              disabled={isPlaying}\r\n            >\r\n              Pre-COVID\r\n            </button>\r\n            <button \r\n              className={period === 'covid' ? 'active' : ''} \r\n              onClick={() => setPeriod('covid')}\r\n              disabled={isPlaying}\r\n            >\r\n              During COVID\r\n            </button>\r\n            <button \r\n              className={period === 'recovery' ? 'active' : ''} \r\n              onClick={() => setPeriod('recovery')}\r\n              disabled={isPlaying}\r\n            >\r\n              Recovery\r\n            </button>\r\n            <button \r\n              className={period === 'current' ? 'active' : ''} \r\n              onClick={() => setPeriod('current')}\r\n              disabled={isPlaying}\r\n            >\r\n              Current\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"control-section\">\r\n          <h3>Borough</h3>\r\n          <div className=\"button-group\">\r\n            <button \r\n              className={selectedBorough === 'all' ? 'active' : ''} \r\n              onClick={() => setSelectedBorough('all')}\r\n              disabled={isPlaying}\r\n            >\r\n              All Boroughs\r\n            </button>\r\n            {boroughs.map(borough => (\r\n              <button \r\n                key={borough}\r\n                className={selectedBorough === borough ? 'active' : ''} \r\n                onClick={() => setSelectedBorough(borough)}\r\n                disabled={isPlaying}\r\n              >\r\n                {borough}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"playback-controls\">\r\n        <button \r\n          className={`play-button ${isPlaying ? 'playing' : ''}`}\r\n          onClick={togglePlayback}\r\n          disabled={loading || !data}\r\n        >\r\n          {isPlaying ? 'Pause' : 'Play'}\r\n        </button>\r\n        \r\n        <div className=\"slider-container\">\r\n          <label>Volume</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"1\" \r\n            step=\"0.01\" \r\n            value={volume}\r\n            onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"slider-container\">\r\n          <label>Speed</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"0.25\" \r\n            max=\"2\" \r\n            step=\"0.25\" \r\n            value={playbackSpeed}\r\n            onChange={(e) => setPlaybackSpeed(parseFloat(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading sonification data...</div>\r\n      ) : (\r\n        <div className=\"waveform-container\">\r\n          <svg \r\n            ref={waveformRef}\r\n            width=\"100%\"\r\n            height=\"200\"\r\n            style={{ border: '1px solid #ddd', borderRadius: '4px' }}\r\n          ></svg>\r\n          \r\n          <div className=\"waveform-legend\">\r\n            <div className=\"legend-item\">\r\n              <div className=\"color-box\" style={{ backgroundColor: '#ff7700' }}></div>\r\n              <span>Taxi Trips (Melody)</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div className=\"color-box\" style={{ backgroundColor: '#0077ff' }}></div>\r\n              <span>Subway Ridership (Bass)</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div className=\"color-box\" style={{ backgroundColor: '#00ff77' }}></div>\r\n              <span>311 Calls (Percussion)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"description\">\r\n        <h3>Experiencing the Urban Symphony</h3>\r\n        <p>\r\n          This sonification transforms NYC urban data into musical elements:\r\n          <ul>\r\n            <li>Taxi patterns control the melody (higher notes for more activity)</li>\r\n            <li>Subway ridership determines the bass line (deeper tones, longer durations)</li>\r\n            <li>311 service calls create percussive elements (more calls = more frequent beats)</li>\r\n          </ul>\r\n        </p>\r\n        <p>\r\n          Listen for the stark contrast between pre-COVID, COVID, and recovery periods.\r\n          The rhythm and density of sounds represent the pulse of urban activity,\r\n          allowing you to \"hear\" patterns that might be missed in visual representations.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UrbanSymphony;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}